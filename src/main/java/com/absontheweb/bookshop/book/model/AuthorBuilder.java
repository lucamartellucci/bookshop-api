// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package com.absontheweb.bookshop.book.model;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class AuthorBuilder extends AuthorBuilderBase<AuthorBuilder> {
	public static AuthorBuilder author() {
		return new AuthorBuilder();
	}

	public AuthorBuilder() {
		super(new Author());
	}

	public Author build() {
		return getInstance();
	}
}

class AuthorBuilderBase<GeneratorT extends AuthorBuilderBase<GeneratorT>> {
	private Author instance;

	protected AuthorBuilderBase(Author aInstance) {
		instance = aInstance;
	}

	protected Author getInstance() {
		return instance;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withId(Long aValue) {
		instance.setId(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withName(String aValue) {
		instance.setName(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withSurname(String aValue) {
		instance.setSurname(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBirthplace(String aValue) {
		instance.setBirthplace(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBorn(LocalDate aValue) {
		instance.setBorn(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withDied(LocalDate aValue) {
		instance.setDied(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBooks(List<Book> aValue) {
		instance.setBooks(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAddedBook(Book aValue) {
		if (instance.getBooks() == null) {
			instance.setBooks(new ArrayList<Book>());
		}

		((ArrayList<Book>) instance.getBooks()).add(aValue);

		return (GeneratorT) this;
	}

	public AddedBookBookBuilder withAddedBook() {
		Book obj = new Book();

		withAddedBook(obj);

		return new AddedBookBookBuilder(obj);
	}

	public class AddedBookBookBuilder extends
			BookBuilderBase<AddedBookBookBuilder> {
		public AddedBookBookBuilder(Book aInstance) {
			super(aInstance);
		}

		@SuppressWarnings("unchecked")
		public GeneratorT endBook() {
			return (GeneratorT) AuthorBuilderBase.this;
		}
	}

	public static class BookBuilderBase<GeneratorT extends BookBuilderBase<GeneratorT>> {
		private Book instance;

		protected BookBuilderBase(Book aInstance) {
			instance = aInstance;
		}

		protected Book getInstance() {
			return instance;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withId(Long aValue) {
			instance.setId(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withTitle(String aValue) {
			instance.setTitle(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withIsbn(String aValue) {
			instance.setIsbn(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withDescription(String aValue) {
			instance.setDescription(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withAuthors(List<Author> aValue) {
			instance.setAuthors(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withAddedAuthor(Author aValue) {
			if (instance.getAuthors() == null) {
				instance.setAuthors(new ArrayList<Author>());
			}

			((ArrayList<Author>) instance.getAuthors()).add(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withPrice(Double aValue) {
			instance.setPrice(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withReleaseDate(LocalDate aValue) {
			instance.setReleaseDate(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withCurrency(Currency aValue) {
			instance.setCurrency(aValue);

			return (GeneratorT) this;
		}
	}
}
