// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package io.lucci.bookshop.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class ErrorBuilder extends ErrorBuilderBase<ErrorBuilder> {
	public static ErrorBuilder error() {
		return new ErrorBuilder();
	}

	public ErrorBuilder() {
		super(new Error());
	}

	public Error build() {
		return getInstance();
	}
}

class ErrorBuilderBase<T extends ErrorBuilderBase<T>> {
	private Error instance;

	protected ErrorBuilderBase(Error aInstance) {
		instance = aInstance;
	}

	protected Error getInstance() {
		return instance;
	}

	@SuppressWarnings("unchecked")
	public T withViolations(List<Violation> aValue) {
		instance.setViolations(aValue);

		return (T) this;
	}

	@SuppressWarnings("unchecked")
	public T withAddedViolation(Violation aValue) {
		if (instance.getViolations() == null) {
			instance.setViolations(new ArrayList<Violation>());
		}

		((ArrayList<Violation>) instance.getViolations()).add(aValue);

		return (T) this;
	}

	public AddedViolationViolationBuilder withAddedViolation() {
		Violation obj = new Violation();

		withAddedViolation(obj);

		return new AddedViolationViolationBuilder(obj);
	}

	@SuppressWarnings("unchecked")
	public T withCode(String aValue) {
		instance.setCode(aValue);

		return (T) this;
	}

	@SuppressWarnings("unchecked")
	public T withMessage(String aValue) {
		instance.setMessage(aValue);

		return (T) this;
	}

	@SuppressWarnings("unchecked")
	public T withAdditionalParams(Map<String, String> aValue) {
		instance.setAdditionalParams(aValue);

		return (T) this;
	}

	public class AddedViolationViolationBuilder extends
			ViolationBuilderBase<AddedViolationViolationBuilder> {
		public AddedViolationViolationBuilder(Violation aInstance) {
			super(aInstance);
		}

		@SuppressWarnings("unchecked")
		public T endViolation() {
			return (T) ErrorBuilderBase.this;
		}
	}

	public static class ViolationBuilderBase<T extends ViolationBuilderBase<T>> {
		private Violation instance;

		protected ViolationBuilderBase(Violation aInstance) {
			instance = aInstance;
		}

		protected Violation getInstance() {
			return instance;
		}

		@SuppressWarnings("unchecked")
		public T withField(String aValue) {
			instance.setField(aValue);

			return (T) this;
		}

		@SuppressWarnings("unchecked")
		public T withRejectedValue(Object aValue) {
			instance.setRejectedValue(aValue);

			return (T) this;
		}

		@SuppressWarnings("unchecked")
		public T withMessage(String aValue) {
			instance.setObjectName(aValue);

			return (T) this;
		}
	}
}
